// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaApp.Models;

#nullable disable

namespace PizzaApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("PizzaApp.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Meat Pizzas",
                            Description = "Pizzas with meat"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Veggie Pizzas",
                            Description = "Pizzas with veggies"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Vegetarian Pizzas",
                            Description = "Pizzas with no meat"
                        });
                });

            modelBuilder.Entity("PizzaApp.Models.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AllergyInformation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("InStock")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPizzaOfTheWeek")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("categoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PizzaId");

                    b.HasIndex("categoryId");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            PizzaId = 1,
                            AllergyInformation = "Contains Gluten, Eggs, Milk",
                            ImageThumbnailUrl = "https://i.ibb.co/27J06fLd/Pop-Pizza-3-56.jpg",
                            ImageUrl = "https://i.ibb.co/27J06fLd/Pop-Pizza-3-56.jpg",
                            InStock = true,
                            IsPizzaOfTheWeek = true,
                            LongDescription = "Large pepperoni pizza with american cheese comes with any dipping sauce",
                            Name = "Pepperoni Pizza",
                            Price = 9.25m,
                            ShortDescription = "Plain Old Pepperoni Pizza",
                            categoryId = 1
                        },
                        new
                        {
                            PizzaId = 2,
                            AllergyInformation = "Contains Gluten, Eggs, Milk",
                            ImageThumbnailUrl = "https://i.ibb.co/21s1vfny/classic-cheese-pizza-FT-RECIPE0422-31a2c938fc2546c9a07b7011658cfd05.jpg",
                            ImageUrl = "https://i.ibb.co/21s1vfny/classic-cheese-pizza-FT-RECIPE0422-31a2c938fc2546c9a07b7011658cfd05.jpg",
                            InStock = true,
                            IsPizzaOfTheWeek = true,
                            LongDescription = "Large Cheese Pizza with american cheese, great for any occasion",
                            Name = "Cheese Pizza",
                            Price = 8.00m,
                            ShortDescription = "Plain Old Cheese Pizza",
                            categoryId = 3
                        });
                });

            modelBuilder.Entity("PizzaApp.Models.Pizza", b =>
                {
                    b.HasOne("PizzaApp.Models.Category", "category")
                        .WithMany("Pizzas")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("PizzaApp.Models.Category", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
